{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":3004,"databundleVersionId":861823,"sourceType":"competition"}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\n# Load the data\ntrain = pd.read_csv('/kaggle/input/digit-recognizer/train.csv')\ntest = pd.read_csv('/kaggle/input/digit-recognizer/test.csv')\n\n# Prepare the data\ny_train = train[\"label\"]\nX_train = train.drop(labels=[\"label\"], axis=1)\n\n# Normalize the data\nX_train = X_train / 255.0\ntest = test / 255.0\n\n# Reshape image in 3 dimensions (height = 28px, width = 28px, channel = 1)\nX_train = X_train.values.reshape(-1, 28, 28, 1)\ntest = test.values.reshape(-1, 28, 28, 1)\n\n# Encode labels to one hot vectors\ny_train = to_categorical(y_train, num_classes=10)\n\n# Split training and validation set\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.1, random_state=42)\n\n# Build the CNN model\nmodel = Sequential()\n\nmodel.add(Conv2D(filters=32, kernel_size=(5,5), padding='Same', activation='relu', input_shape=(28,28,1)))\nmodel.add(Conv2D(filters=32, kernel_size=(5,5), padding='Same', activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Conv2D(filters=64, kernel_size=(3,3), padding='Same', activation='relu'))\nmodel.add(Conv2D(filters=64, kernel_size=(3,3), padding='Same', activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2), strides=(2,2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Flatten())\nmodel.add(Dense(256, activation=\"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation=\"softmax\"))\n\n# Compile the model\nmodel.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n\n# Set up learning rate reduction and early stopping\nlearning_rate_reduction = ReduceLROnPlateau(monitor='val_accuracy', \n                                           patience=3, \n                                           verbose=1, \n                                           factor=0.5, \n                                           min_lr=0.00001)\n\nearly_stopping = EarlyStopping(monitor='val_loss', patience=10, verbose=1, restore_best_weights=True)\n\n# Data augmentation to prevent overfitting\ndatagen = ImageDataGenerator(\n        rotation_range=10,\n        zoom_range=0.1,\n        width_shift_range=0.1,\n        height_shift_range=0.1)\n\ndatagen.fit(X_train)\n\n# Train the model\nhistory = model.fit(datagen.flow(X_train, y_train, batch_size=86),\n                    epochs=50,\n                    validation_data=(X_val, y_val),\n                    verbose=1,\n                    callbacks=[learning_rate_reduction, early_stopping])\n\n# Plot training history\nplt.figure(figsize=(12, 4))\nplt.subplot(1, 2, 1)\nplt.plot(history.history['accuracy'], label='Training Accuracy')\nplt.plot(history.history['val_accuracy'], label='Validation Accuracy')\nplt.title('Accuracy')\nplt.legend()\n\nplt.subplot(1, 2, 2)\nplt.plot(history.history['loss'], label='Training Loss')\nplt.plot(history.history['val_loss'], label='Validation Loss')\nplt.title('Loss')\nplt.legend()\nplt.show()\n\n# Predict results\nresults = model.predict(test)\nresults = np.argmax(results, axis=1)\nresults = pd.Series(results, name=\"Label\")\n\n# Create submission file - FINAL CORRECTED VERSION\nsubmission = pd.concat([\n    pd.Series(range(1, len(results)+1), name=\"ImageId\"), \n    results\n], axis=1)\nsubmission.to_csv(\"submission.csv\", index=False)\n\nprint(\"Submission file created!\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-13T05:34:45.252801Z","iopub.execute_input":"2025-08-13T05:34:45.253413Z","iopub.status.idle":"2025-08-13T05:42:00.428149Z","shell.execute_reply.started":"2025-08-13T05:34:45.253390Z","shell.execute_reply":"2025-08-13T05:42:00.427220Z"}},"outputs":[{"name":"stderr","text":"2025-08-13 05:34:47.649097: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1755063287.841455      36 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1755063287.896271      36 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n/usr/local/lib/python3.11/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\nI0000 00:00:1755063306.487292      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13942 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5\nI0000 00:00:1755063306.488059      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 13942 MB memory:  -> device: 1, name: Tesla T4, pci bus id: 0000:00:05.0, compute capability: 7.5\n","output_type":"stream"},{"name":"stdout","text":"Epoch 1/50\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n  self._warn_if_super_not_called()\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1755063311.315944      97 service.cc:148] XLA service 0x7afeb0049650 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1755063311.316770      97 service.cc:156]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1755063311.316793      97 service.cc:156]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\nI0000 00:00:1755063311.695027      97 cuda_dnn.cc:529] Loaded cuDNN version 90300\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m  8/440\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 26ms/step - accuracy: 0.1028 - loss: 2.2891","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1755063316.646469      97 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 41ms/step - accuracy: 0.7088 - loss: 0.8454 - val_accuracy: 0.9831 - val_loss: 0.0558 - learning_rate: 0.0010\nEpoch 2/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 28ms/step - accuracy: 0.9580 - loss: 0.1455 - val_accuracy: 0.9881 - val_loss: 0.0407 - learning_rate: 0.0010\nEpoch 3/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9662 - loss: 0.1127 - val_accuracy: 0.9890 - val_loss: 0.0393 - learning_rate: 0.0010\nEpoch 4/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9730 - loss: 0.0958 - val_accuracy: 0.9919 - val_loss: 0.0304 - learning_rate: 0.0010\nEpoch 5/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9781 - loss: 0.0727 - val_accuracy: 0.9921 - val_loss: 0.0242 - learning_rate: 0.0010\nEpoch 6/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9779 - loss: 0.0716 - val_accuracy: 0.9917 - val_loss: 0.0253 - learning_rate: 0.0010\nEpoch 7/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9820 - loss: 0.0640 - val_accuracy: 0.9888 - val_loss: 0.0335 - learning_rate: 0.0010\nEpoch 8/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 0.9830 - loss: 0.0582\nEpoch 8: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9830 - loss: 0.0582 - val_accuracy: 0.9910 - val_loss: 0.0289 - learning_rate: 0.0010\nEpoch 9/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9875 - loss: 0.0434 - val_accuracy: 0.9919 - val_loss: 0.0253 - learning_rate: 5.0000e-04\nEpoch 10/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9886 - loss: 0.0411 - val_accuracy: 0.9936 - val_loss: 0.0227 - learning_rate: 5.0000e-04\nEpoch 11/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9886 - loss: 0.0421 - val_accuracy: 0.9931 - val_loss: 0.0225 - learning_rate: 5.0000e-04\nEpoch 12/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9879 - loss: 0.0375 - val_accuracy: 0.9938 - val_loss: 0.0191 - learning_rate: 5.0000e-04\nEpoch 13/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9903 - loss: 0.0324 - val_accuracy: 0.9921 - val_loss: 0.0206 - learning_rate: 5.0000e-04\nEpoch 14/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 28ms/step - accuracy: 0.9898 - loss: 0.0365 - val_accuracy: 0.9943 - val_loss: 0.0191 - learning_rate: 5.0000e-04\nEpoch 15/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9896 - loss: 0.0349 - val_accuracy: 0.9938 - val_loss: 0.0202 - learning_rate: 5.0000e-04\nEpoch 16/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9902 - loss: 0.0312 - val_accuracy: 0.9931 - val_loss: 0.0226 - learning_rate: 5.0000e-04\nEpoch 17/50\n\u001b[1m439/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 0.9899 - loss: 0.0300\nEpoch 17: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9899 - loss: 0.0300 - val_accuracy: 0.9940 - val_loss: 0.0201 - learning_rate: 5.0000e-04\nEpoch 18/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9922 - loss: 0.0263 - val_accuracy: 0.9938 - val_loss: 0.0190 - learning_rate: 2.5000e-04\nEpoch 19/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9919 - loss: 0.0279 - val_accuracy: 0.9950 - val_loss: 0.0188 - learning_rate: 2.5000e-04\nEpoch 20/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9922 - loss: 0.0243 - val_accuracy: 0.9940 - val_loss: 0.0194 - learning_rate: 2.5000e-04\nEpoch 21/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9921 - loss: 0.0259 - val_accuracy: 0.9938 - val_loss: 0.0184 - learning_rate: 2.5000e-04\nEpoch 22/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 0.9941 - loss: 0.0197\nEpoch 22: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9941 - loss: 0.0197 - val_accuracy: 0.9940 - val_loss: 0.0209 - learning_rate: 2.5000e-04\nEpoch 23/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 28ms/step - accuracy: 0.9930 - loss: 0.0247 - val_accuracy: 0.9938 - val_loss: 0.0209 - learning_rate: 1.2500e-04\nEpoch 24/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 28ms/step - accuracy: 0.9934 - loss: 0.0205 - val_accuracy: 0.9940 - val_loss: 0.0206 - learning_rate: 1.2500e-04\nEpoch 25/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 0.9942 - loss: 0.0185\nEpoch 25: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9942 - loss: 0.0185 - val_accuracy: 0.9945 - val_loss: 0.0199 - learning_rate: 1.2500e-04\nEpoch 26/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9942 - loss: 0.0186 - val_accuracy: 0.9943 - val_loss: 0.0201 - learning_rate: 6.2500e-05\nEpoch 27/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9939 - loss: 0.0209 - val_accuracy: 0.9943 - val_loss: 0.0196 - learning_rate: 6.2500e-05\nEpoch 28/50\n\u001b[1m439/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 0.9946 - loss: 0.0190\nEpoch 28: ReduceLROnPlateau reducing learning rate to 3.125000148429535e-05.\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9946 - loss: 0.0190 - val_accuracy: 0.9938 - val_loss: 0.0197 - learning_rate: 6.2500e-05\nEpoch 29/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 28ms/step - accuracy: 0.9948 - loss: 0.0173 - val_accuracy: 0.9940 - val_loss: 0.0190 - learning_rate: 3.1250e-05\nEpoch 30/50\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9943 - loss: 0.0168 - val_accuracy: 0.9943 - val_loss: 0.0188 - learning_rate: 3.1250e-05\nEpoch 31/50\n\u001b[1m439/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 0.9950 - loss: 0.0177\nEpoch 31: ReduceLROnPlateau reducing learning rate to 1.5625000742147677e-05.\n\u001b[1m440/440\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 29ms/step - accuracy: 0.9950 - loss: 0.0177 - val_accuracy: 0.9938 - val_loss: 0.0191 - learning_rate: 3.1250e-05\nEpoch 31: early stopping\nRestoring model weights from the end of the best epoch: 21.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x400 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"\u001b[1m875/875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2ms/step\nSubmission file created!\n","output_type":"stream"}],"execution_count":4}]}